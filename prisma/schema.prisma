generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id             Int         @id @default(autoincrement())
  email          String      @unique
  password       String
  phoneNo        String
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  firstName      String
  lastName       String?
  lastLogin      DateTime?
  profilePicture String?
  isActive       Boolean     @default(true)
  role           String?
  orders         Order[]     // Orders received by the seller
}

model Item {
  id              Int         @id @default(autoincrement())
  name            String
  breed           String?
  category        String
  images          String[]
  price           Int
  description     String?
  discountedPrice Int
  isDiscounted    Boolean      @default(false)
  weight          Float?
  height          Float?
  age             Float?
  sex             String?
  nature          String?
  specifications  String?
  availability    Boolean
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  orders          OrderItem[]  // Back-reference to OrderItem
}

model Order {
  id             Int         @id @default(autoincrement())
  date           DateTime    @default(now())
  items          OrderItem[] // Back-reference to OrderItem
  total          Int
  status         OrderStatus @default(PENDING)
  seller         User        @relation(fields: [sellerId], references: [id]) // Associated seller
  sellerId       Int
  buyersName     String
  buyersPhoneNo  String
  buyersAddress  String
  buyersMessage  String
}


model OrderItem {
  id          Int      @id @default(autoincrement())
  orderId     Int
  itemId      Int
  order       Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  item        Item     @relation(fields: [itemId], references: [id], onDelete: Cascade)

  @@unique([orderId, itemId]) // Prevent duplicate item-order pairs
  @@index([orderId])
  @@index([itemId])
}

enum OrderStatus {
  PENDING
  CONFIRMED
  SHIPPED
  DELIVERED
  CANCELLED
}
