generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model user {
  id             Int       @id @default(autoincrement())
  email          String    @unique
  password       String
  phoneNo        String
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  firstName      String
  lastName       String?
  lastLogin      DateTime?
  profilePicture String?
  isActive       Boolean   @default(true)
  role           role?
  items          item[]
}

model item {
  id              Int          @id @default(autoincrement())
  name            String
  breedId         Int?
  categoryId      Int
  images          String[]
  price           Int
  description     String?
  discountedPrice Int
  isDiscounted    Boolean      @default(false)
  weight          Float?
  height          Float?
  age             Float?
  sex             String?
  nature          String?
  specifications  String?
  availability    availability @default(AVAILABLE)
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  sellerId        Int
  isfeatured      Boolean      @default(false)
  breed           breed?       @relation(fields: [breedId], references: [id])
  category        category     @relation(fields: [categoryId], references: [id])
  seller          user         @relation(fields: [sellerId], references: [id], onDelete: Cascade)
}

model category {
  id    Int    @id @default(autoincrement())
  name  String @unique
  items item[]
}

model breed {
  id    Int    @id @default(autoincrement())
  name  String @unique
  items item[]
}

enum role {
  ADMIN
  SELLER
}

enum availability {
  AVAILABLE
  UNAVAILABLE
}
