generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model user {
  id             Int         @id @default(autoincrement())
  email          String      @unique
  password       String
  phoneNo        String
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  firstName      String
  lastName       String?
  lastLogin      DateTime?
  profilePicture String?
  isActive       Boolean     @default(true)
  role           role?
  items          item[]      // Items listed by the seller
}

enum role{
  ADMIN
  SELLER
}

model item {
  id              Int       @id @default(autoincrement())
  name            String
  breed           breed?    @relation(fields: [breedId], references: [id])
  breedId         Int?
  category        category  @relation(fields: [categoryId], references: [id])
  categoryId      Int
  images          String[]
  price           Int
  description     String?
  discountedPrice Int
  isDiscounted    Boolean    @default(false)
  weight          Float?
  height          Float?
  age             Float?
  sex             String?
  nature          String?
  specifications  String?
  availability    availability   @default(AVAILABLE)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  sellerId        Int
  seller          user       @relation(fields: [sellerId], references: [id], onDelete: Cascade) // Relation to User
}

enum availability {
  AVAILABLE
  UNAVAILABLE
}

model category{
  id              Int       @id @default(autoincrement())
  name            String    @unique
  items           item[]
}

model breed{
  id              Int       @id @default(autoincrement())
  name            String    @unique
  items           item[]
} 